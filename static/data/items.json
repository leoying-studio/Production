{
    "blogList": [
        {
            "type": 1,
            "title": "前进的路",
            "desc": "我们人的一生会有很多的选择,这些路其实并没有对与错，只是到最后选择的承受什么样的结果而已",
            "content": "我们长大了,长辈不再去关注我们的考试成绩。走出校园步入社会，我们面临了种种选择，每一种选择对以后的成长和未来的前景息息相关。社会的残酷，让我们和金钱接轨。从侧面来看，金钱也确实是我们能力的一种反映。但是不仅仅于此，我要说，人的一生的能力分为很多，与儿时的成长环境，中学的学习环境，以及接触的人或者事情，又或者有的人找到了一条适合自己的路，有的人还在探索.....",
            "publishTime": "2017/03/21"
        },
        {
            "type": 6,
            "title": "ajax对比resource",
            "desc": "前端和后台交互的插件对比",
            "content": "1.resource 体积小巧，服务端GZIP压缩后只有4.5k，jquery远比这个要大得多。 2.resource 的兼容性支持和vueJS一样，支持IE8以上的浏览器和其他的主流浏览器，但是jquery对兼容性这块做的更加全面 ，支持各种浏览器版本。 3.resource支持 Promise API 和 URI Templates 类似于 ajax的路由模板，可以结合async/await来使用，摆脱异步回调函数 的编码风格，而jquey的ajax 不支持Promise，异步请求需要内部写入回调函数，如果多层请求需要嵌套。 4.resource支持拦截器，拦截器是全局的，拦截器可以在请求发送前和发送请求后做一些处理。 拦截器在一些场景下会非常有用，比如请求发送前在headers中设置access_token，或者在请求失败时，提供共通的处理方式， jquery的ajax无此项配置。 5.axois为Vuejs官方推荐的ajax请求插件。",
            "publishTime": "2017/03/21"
        },
        {
            "type": 6,
            "title": "vue中的nextTick",
            "content": "nextTick：由于VueJS框架加载到内存中以后,在一个事件函数中，如果调用了vueJS-api当程序走到了这一步的时候， 视图并不会立刻更新，而是当程序走到该函数的结尾'花括号'的时候，程序才会真正去响应处理。而js原生的api则会 对当前的操作进行及时的处理，那么有时候我需要DOM更新完成再去做我的下一步执行操作(前面也讲到过了，不会立刻执行 如果直接把需要处理的后续操作写在VueJS后面会被立刻执行的，也就是说立刻执行的操作会DOM更新，这里 就造成了不好的情况)，那么我们要让程序在更新去执行，此时就要用到nextTick,他的作用就是当DOM重新渲染完成 之后，下一次再回来处理nextTick里面的代码。",
            "desc": "异步队列",
            "publishTime": "2017/03/21"
        },
        {
            "type": 6,
            "title": "vue1.0和2.0对比变化",
            "content": "1.vuejs2.0对比之前的1.0，vueJS2.0属于一个单向数据流绑定，父组件负责传递值，子组件负责接收。 2.子组件无法隐式对父组件的值做出更改，特殊情况下采用事件$emit来响应，或者vue-bus,中大型应用推荐vuex来管理。 3.子组件接收到的props里的值不建议直接使用，直接使用的话,子组件需要使用props的值可以通过data方法接收返回后再绑定。 最初以为vueJS2.0取消组件的之间的双向绑定，包括引用类型的数据也会不受影响，遇到各种坎之后才发现引用类型的数据 父子组件任何一方操作数据，都会受影响。也就是说单向绑定只对非引用类型的数据有效。 4.vueJS中的每个组件都会有生命周期，而这些生命周期在页面渲染的时候会开始触发，但是当对于请求的数据可能是异步 返回的时候会导致生命周期加载完毕，数据的值仍然是空的，这个时候可以采用computed来检测这个值的获取，再一个 就是使用watch.",
            "desc": "vuejs1.0和2.0中api的变化",
            "publishTime": "2017/03/21"
        }
      
    ],
    "proverbsList": [
        {
            "time": "",
            "content": ""
        }
    ]
}